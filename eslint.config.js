import parser from '@typescript-eslint/parser'
import plugin from '@typescript-eslint/eslint-plugin'

export default {
  files: ['**/*.ts'],
  plugins: { '@typescript-eslint': plugin },
  languageOptions: {
    parser,
    parserOptions: { project: true },
    globals: {
      Bun: 'readonly',
      atob: 'readonly',
      btoa: 'readonly',
      caches: 'readonly',
      clearInterval: 'readonly',
      clearTimeout: 'readonly',
      console: 'readonly',
      crypto: 'readonly',
      document: 'readonly',
      fetch: 'readonly',
      localStorage: 'readonly',
      location: 'writable',
      navigator: 'readonly',
      performance: 'readonly',
      postMessage: 'readonly',
      process: 'readonly',
      self: 'readonly',
      sessionStorage: 'readonly',
      setInterval: 'readonly',
      setTimeout: 'readonly',
      window: 'readonly',
    },
  },
  rules: {
    //* https://typescript-eslint.io/rules/
    '@typescript-eslint/adjacent-overload-signatures': 2,
    '@typescript-eslint/array-type': 2,
    '@typescript-eslint/await-thenable': 2,
    '@typescript-eslint/ban-ts-comment': 2,
    '@typescript-eslint/ban-tslint-comment': 2,
    '@typescript-eslint/class-literal-property-style': 2,
    '@typescript-eslint/class-methods-use-this': 0,
    '@typescript-eslint/consistent-generic-constructors': 2,
    '@typescript-eslint/consistent-indexed-object-style': 2,
    '@typescript-eslint/consistent-return': 0,
    '@typescript-eslint/consistent-type-assertions': 2,
    '@typescript-eslint/consistent-type-definitions': [2, 'type'],
    '@typescript-eslint/consistent-type-exports': 2,
    '@typescript-eslint/consistent-type-imports': 2,
    '@typescript-eslint/default-param-last': 2,
    '@typescript-eslint/dot-notation': 2,
    '@typescript-eslint/explicit-function-return-type': 2,
    '@typescript-eslint/explicit-member-accessibility': [
      2,
      { accessibility: 'no-public' },
    ],
    '@typescript-eslint/explicit-module-boundary-types': 0,
    '@typescript-eslint/init-declarations': 2,
    '@typescript-eslint/max-params': [2, { max: 5 }],
    '@typescript-eslint/member-ordering': 0, //? Maybe
    '@typescript-eslint/method-signature-style': 2,
    '@typescript-eslint/naming-convention': 0, //? Maybe
    '@typescript-eslint/no-array-constructor': 2,
    '@typescript-eslint/no-array-delete': 2,
    '@typescript-eslint/no-base-to-string': 2,
    '@typescript-eslint/no-confusing-non-null-assertion': 0,
    '@typescript-eslint/no-confusing-void-expression': 2,
    '@typescript-eslint/no-dupe-class-members': 2,
    '@typescript-eslint/no-duplicate-enum-values': 2,
    '@typescript-eslint/no-duplicate-type-constituents': 2,
    '@typescript-eslint/no-dynamic-delete': 2,
    '@typescript-eslint/no-empty-function': 2,
    '@typescript-eslint/no-empty-object-type': 2,
    '@typescript-eslint/no-explicit-any': 2,
    '@typescript-eslint/no-extra-non-null-assertion': 2,
    '@typescript-eslint/no-extraneous-class': 2,
    '@typescript-eslint/no-floating-promises': 0, //? Maybe
    '@typescript-eslint/no-for-in-array': 2,
    '@typescript-eslint/no-implied-eval': 2,
    '@typescript-eslint/no-import-type-side-effects': 2,
    '@typescript-eslint/no-inferrable-types': 2,
    '@typescript-eslint/no-invalid-this': 2,
    '@typescript-eslint/no-invalid-void-type': 2,
    '@typescript-eslint/no-loop-func': 2,
    '@typescript-eslint/no-magic-numbers': 0,
    '@typescript-eslint/no-meaningless-void-operator': 2,
    '@typescript-eslint/no-misused-new': 2,
    '@typescript-eslint/no-misused-promises': 2,
    '@typescript-eslint/no-mixed-enums': 2,
    '@typescript-eslint/no-namespace': 2,
    '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 2,
    '@typescript-eslint/no-non-null-asserted-optional-chain': 2,
    '@typescript-eslint/no-non-null-assertion': 0, //? Maybe
    '@typescript-eslint/no-redeclare': 2,
    '@typescript-eslint/no-redundant-type-constituents': 2,
    '@typescript-eslint/no-require-imports': 2,
    '@typescript-eslint/no-restricted-imports': 0,
    '@typescript-eslint/no-shadow': 2,
    '@typescript-eslint/no-this-alias': [2, { allowedNames: ['self'] }],
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 2,
    '@typescript-eslint/no-unnecessary-condition': 2,
    '@typescript-eslint/no-unnecessary-qualifier': 2,
    '@typescript-eslint/no-unnecessary-template-expression': 2,
    '@typescript-eslint/no-unnecessary-type-arguments': 2,
    '@typescript-eslint/no-unnecessary-type-assertion': 2,
    '@typescript-eslint/no-unnecessary-type-constraint': 2,
    '@typescript-eslint/no-unsafe-argument': 2,
    '@typescript-eslint/no-unsafe-assignment': 2,
    '@typescript-eslint/no-unsafe-call': 2,
    '@typescript-eslint/no-unsafe-declaration-merging': 2,
    '@typescript-eslint/no-unsafe-enum-comparison': 2,
    '@typescript-eslint/no-unsafe-function-type': 2,
    '@typescript-eslint/no-unsafe-member-access': 2,
    '@typescript-eslint/no-unsafe-return': 2,
    '@typescript-eslint/no-unsafe-unary-minus': 2,
    '@typescript-eslint/no-unused-expressions': 2,
    '@typescript-eslint/no-unused-vars': 2,
    '@typescript-eslint/no-use-before-define': 2,
    '@typescript-eslint/no-useless-constructor': 2,
    '@typescript-eslint/no-useless-empty-export': 2,
    '@typescript-eslint/no-wrapper-object-types': 2,
    '@typescript-eslint/non-nullable-type-assertion-style': 2,
    '@typescript-eslint/only-throw-error': 2,
    '@typescript-eslint/parameter-properties': 2,
    '@typescript-eslint/prefer-as-const': 2,
    '@typescript-eslint/prefer-destructuring': 2,
    '@typescript-eslint/prefer-enum-initializers': 0,
    '@typescript-eslint/prefer-find': 2,
    '@typescript-eslint/prefer-for-of': 2,
    '@typescript-eslint/prefer-function-type': 2,
    '@typescript-eslint/prefer-includes': 2,
    '@typescript-eslint/prefer-literal-enum-member': 2,
    '@typescript-eslint/prefer-namespace-keyword': 0,
    '@typescript-eslint/prefer-nullish-coalescing': 2,
    '@typescript-eslint/prefer-optional-chain': 2,
    '@typescript-eslint/prefer-promise-reject-errors': 0,
    '@typescript-eslint/prefer-readonly': 2,
    '@typescript-eslint/prefer-readonly-parameter-types': 0,
    '@typescript-eslint/prefer-reduce-type-parameter': 2,
    '@typescript-eslint/prefer-regexp-exec': 2,
    '@typescript-eslint/prefer-return-this-type': 2,
    '@typescript-eslint/prefer-string-starts-ends-with': [
      2,
      { allowSingleElementEquality: 'always' },
    ],
    '@typescript-eslint/promise-function-async': 2,
    '@typescript-eslint/require-array-sort-compare': 2,
    '@typescript-eslint/require-await': 2,
    '@typescript-eslint/restrict-plus-operands': [
      2,
      {
        allowAny: false,
        allowBoolean: false,
        allowNullish: false,
        allowNumberAndString: false,
        allowRegExp: false,
      },
    ],
    '@typescript-eslint/restrict-template-expressions': 0,
    '@typescript-eslint/return-await': [2, 'always'],
    '@typescript-eslint/strict-boolean-expressions': 0, //? Maybe
    '@typescript-eslint/switch-exhaustiveness-check': 0,
    '@typescript-eslint/triple-slash-reference': [2, { types: 'never' }],
    '@typescript-eslint/typedef': 0,
    '@typescript-eslint/unbound-method': 2,
    '@typescript-eslint/unified-signatures': 2,
    '@typescript-eslint/use-unknown-in-catch-callback-variable': 2,

    //* https://eslint.org/docs/latest/rules/
    'accessor-pairs': 2,
    'array-callback-return': 2,
    'arrow-body-style': 2,
    'block-scoped-var': 2,
    'camelcase': 2,
    'capitalized-comments': 2,
    'complexity': 0,
    'consistent-this': [2, 'self'],
    'constructor-super': 2,
    'curly': 2,
    'default-case': 2,
    'default-case-last': 2,
    'eqeqeq': 2,
    'for-direction': 2,
    'func-name-matching': 0,
    'func-names': [2, 'never'],
    'func-style': 2,
    'getter-return': 2,
    'grouped-accessor-pairs': [2, 'getBeforeSet'],
    'guard-for-in': 0,
    'id-denylist': 0,
    'id-length': [2, { min: 1, max: 20 }],
    'id-match': 0,
    'line-comment-position': 2,
    'logical-assignment-operators': 2,
    'max-classes-per-file': 2,
    'max-depth': 2,
    'max-lines': 2,
    'max-lines-per-function': 2,
    'max-nested-callbacks': 2,
    'max-statements': 0,
    'multiline-comment-style': 2,
    'new-cap': 2,
    'no-alert': 2,
    'no-async-promise-executor': 2,
    'no-await-in-loop': 0,
    'no-bitwise': 2,
    'no-caller': 2,
    'no-case-declarations': 2,
    'no-class-assign': 2,
    'no-compare-neg-zero': 2,
    'no-cond-assign': 2,
    'no-console': 0,
    'no-const-assign': 2,
    'no-constant-binary-expression': 2,
    'no-constant-condition': 2,
    'no-constructor-return': 2,
    'no-continue': 0,
    'no-control-regex': 2,
    'no-debugger': 2,
    'no-delete-var': 2,
    'no-div-regex': 0,
    'no-dupe-args': 2,
    'no-dupe-else-if': 2,
    'no-dupe-keys': 2,
    'no-duplicate-case': 2,
    'no-duplicate-imports': 2,
    'no-else-return': 2,
    'no-empty': 2,
    'no-empty-character-class': 2,
    'no-empty-pattern': 2,
    'no-empty-static-block': 2,
    'no-eq-null': 2,
    'no-eval': 2,
    'no-ex-assign': 2,
    'no-extend-native': 2,
    'no-extra-bind': 2,
    'no-extra-boolean-cast': 2,
    'no-extra-label': 2,
    'no-fallthrough': 2,
    'no-func-assign': 2,
    'no-global-assign': 2,
    'no-implicit-coercion': 2,
    'no-implicit-globals': 2,
    'no-import-assign': 2,
    'no-inline-comments': 2,
    'no-inner-declarations': 2,
    'no-invalid-regexp': 2,
    'no-irregular-whitespace': 2,
    'no-iterator': 2,
    'no-label-var': 2,
    'no-labels': 2,
    'no-lone-blocks': 2,
    'no-lonely-if': 2,
    'no-loss-of-precision': 2,
    'no-misleading-character-class': 2,
    'no-multi-assign': 0,
    'no-multi-str': 2,
    'no-negated-condition': 2,
    'no-nested-ternary': 0,
    'no-new': 0,
    'no-new-func': 2,
    'no-new-native-nonconstructor': 2,
    'no-new-wrappers': 2,
    'no-nonoctal-decimal-escape': 2,
    'no-obj-calls': 2,
    'no-object-constructor': 2,
    'no-octal': 2,
    'no-octal-escape': 2,
    'no-param-reassign': 0,
    'no-plusplus': 0,
    'no-promise-executor-return': 2,
    'no-proto': 2,
    'no-prototype-builtins': 2,
    'no-regex-spaces': 2,
    'no-restricted-exports': 0,
    'no-restricted-globals': 0,
    'no-restricted-properties': 0,
    'no-restricted-syntax': 0,
    'no-return-assign': 0,
    'no-script-url': 2,
    'no-self-assign': 2,
    'no-self-compare': 2,
    'no-sequences': 2,
    'no-setter-return': 2,
    'no-shadow-restricted-names': 2,
    'no-sparse-arrays': 2,
    'no-template-curly-in-string': 2,
    'no-ternary': 0,
    'no-this-before-super': 2,
    'no-throw-literal': 2,
    'no-undef': 2,
    'no-undef-init': 2,
    'no-undefined': 0,
    'no-underscore-dangle': 2,
    'no-unexpected-multiline': 2,
    'no-unmodified-loop-condition': 0,
    'no-unneeded-ternary': 2,
    'no-unreachable': 2,
    'no-unreachable-loop': 2,
    'no-unsafe-finally': 2,
    'no-unsafe-negation': 2,
    'no-unsafe-optional-chaining': 2,
    'no-unused-labels': 2,
    'no-unused-private-class-members': 2,
    'no-useless-assignment': 2,
    'no-useless-backreference': 2,
    'no-useless-call': 2,
    'no-useless-catch': 2,
    'no-useless-computed-key': 2,
    'no-useless-concat': 2,
    'no-useless-escape': 2,
    'no-useless-rename': 2,
    'no-useless-return': 2,
    'no-var': 2,
    'no-void': 2,
    'no-warning-comments': 0,
    'no-with': 2,
    'object-shorthand': 2,
    'one-var': [2, 'never'],
    'operator-assignment': 2,
    'prefer-arrow-callback': 2,
    'prefer-const': 2,
    'prefer-exponentiation-operator': 2,
    'prefer-named-capture-group': 2,
    'prefer-numeric-literals': 2,
    'prefer-object-has-own': 2,
    'prefer-object-spread': 2,
    'prefer-regex-literals': 2,
    'prefer-rest-params': 2,
    'prefer-spread': 2,
    'prefer-template': 2,
    'radix': 2,
    'require-atomic-updates': 2,
    'require-unicode-regexp': 0,
    'require-yield': 2,
    'sort-imports': 2,
    'sort-keys': 0,
    'sort-vars': 0,
    'strict': 0,
    'symbol-description': 2,
    'unicode-bom': 2,
    'use-isnan': 2,
    'valid-typeof': 2,
    'vars-on-top': 0,
    'yoda': 2,
  },
}
